name: Build and Deploy

on:
  push:
    branches: [master]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    env:
      CI: true
    container:
      image: "node:16"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install lsb-release and sudo
        run: |
            apt-get update
            apt-get install -y lsb-release sudo

      - name: Check Ubuntu version
        run: lsb_release -a

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Install Maven
        run: |
          apt-get update && apt-get install -y maven

      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y apt-transport-https ca-certificates curl gnupg-agent software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io

    
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver-opts: >
            network=host
          install: true
          version: latest
          distribution: "ubuntu"

      - name: Build with Maven
        run: mvn -B clean package

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: zeljana
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: zeljana/intens-praksa:latest
        env:
          BUILDPLATFORM: ${{ steps.buildx.outputs.default-platform }}

      - name: Deploy Docker image
        uses: appleboy/ssh-action@master
        with:
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
          host: 192.168.1.1
          username: zeljanazegarac
          script: |
            docker pull zeljana/intens-praksa:latest
            docker stop praksa-app || true
            docker rm praksa-app || true
            docker run -d -p 8080:8080 --name praksa-app zeljana/intens-praksa:latest
